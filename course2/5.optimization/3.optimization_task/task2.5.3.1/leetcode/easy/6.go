/*

6. Уникальные слова Морзе
Международная азбука Морзе определяет стандартное кодирование, где каждая буква отображается в серию точек и тире, следующим образом:

'a' отображается как ".-",

'b' отображается как "-...",

'c' отображается как "-.-.", и так далее.

Для удобства, ниже приведена полная таблица для 26 букв английского алфавита:

[".-","-...","-.-.","-..",".","..-.","--.","....","..",".---","-.-",".-..","--","-.","---",".--.","--.-",".-.","...","-","..-","...-",".--","-..-","-.--","--.."]

Дан массив строк words, каждое из которых может быть записано как конкатенация кода Морзе для каждой буквы.

Например, "cab" можно записать как "-.-..--...", что является конкатенацией "-.-.", ".-" и "-...". Мы будем называть такую конкатенацию преобразованием слова.

Вернуть количество различных преобразований среди всех слов, которые у нас есть.

Пример 1:

Input: words = ["gin","zen","gig","msg"]

Output: 2

Объяснение: Преобразование каждого слова выглядит так:

"gin" -> "--...-."

"zen" -> "--...-."

"gig" -> "--...--."

"msg" -> "--...--."

Существует 2 различных преобразования: "--...-." и "--...--.".

Пример 2:

Input: words = ["a"]

Output: 1

Ограничения:

1 <= words.length <= 100

1 <= words[i].length <= 12

words[i] состоит из строчных букв английского алфавита.

func uniqueMorseRepresentations(words []string) int {

}
https://leetcode.com/problems/unique-morse-code-words/

*/

package main

func uniqueMorseRepresentations(words []string) int {
	morseCode := map[rune]string{
		'a': ".-", 'b': "-...", 'c': "-.-.", 'd': "-..", 'e': ".",
		'f': "..-.", 'g': "--.", 'h': "....", 'i': "..", 'j': ".---",
		'k': "-.-", 'l': ".-..", 'm': "--", 'n': "-.", 'o': "---",
		'p': ".--.", 'q': "--.-", 'r': ".-.", 's': "...", 't': "-",
		'u': "..-", 'v': "...-", 'w': ".--", 'x': "-..-", 'y': "-.--",
		'z': "--..",
	}
	result := make(map[string]int)

	for _, word := range words {
		key := ""
		runes := []rune(word)
		for _, k := range runes {
			key += morseCode[k]
		}
		result[key]++
	}
	return len(result)

}
