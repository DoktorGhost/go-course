// Code generated by MockGen. DO NOT EDIT.
// Source: main.go

// Package mocks is a generated GoMock package.
package main

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockGithubLister is a mock of GithubLister interface.
type MockGithubLister struct {
	ctrl     *gomock.Controller
	recorder *MockGithubListerMockRecorder
}

// MockGithubListerMockRecorder is the mock recorder for MockGithubLister.
type MockGithubListerMockRecorder struct {
	mock *MockGithubLister
}

// NewMockGithubLister creates a new mock instance.
func NewMockGithubLister(ctrl *gomock.Controller) *MockGithubLister {
	mock := &MockGithubLister{ctrl: ctrl}
	mock.recorder = &MockGithubListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGithubLister) EXPECT() *MockGithubListerMockRecorder {
	return m.recorder
}

// GetItems mocks base method.
func (m *MockGithubLister) GetItems(ctx context.Context, username string) ([]Item, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetItems", ctx, username)
	ret0, _ := ret[0].([]Item)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetItems indicates an expected call of GetItems.
func (mr *MockGithubListerMockRecorder) GetItems(ctx, username interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetItems", reflect.TypeOf((*MockGithubLister)(nil).GetItems), ctx, username)
}

// MockGeneralGithubLister is a mock of GeneralGithubLister interface.
type MockGeneralGithubLister struct {
	ctrl     *gomock.Controller
	recorder *MockGeneralGithubListerMockRecorder
}

// MockGeneralGithubListerMockRecorder is the mock recorder for MockGeneralGithubLister.
type MockGeneralGithubListerMockRecorder struct {
	mock *MockGeneralGithubLister
}

// NewMockGeneralGithubLister creates a new mock instance.
func NewMockGeneralGithubLister(ctrl *gomock.Controller) *MockGeneralGithubLister {
	mock := &MockGeneralGithubLister{ctrl: ctrl}
	mock.recorder = &MockGeneralGithubListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGeneralGithubLister) EXPECT() *MockGeneralGithubListerMockRecorder {
	return m.recorder
}

// GetItems mocks base method.
func (m *MockGeneralGithubLister) GetItems(ctx context.Context, username string, strategy GithubLister) ([]Item, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetItems", ctx, username, strategy)
	ret0, _ := ret[0].([]Item)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetItems indicates an expected call of GetItems.
func (mr *MockGeneralGithubListerMockRecorder) GetItems(ctx, username, strategy interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetItems", reflect.TypeOf((*MockGeneralGithubLister)(nil).GetItems), ctx, username, strategy)
}
